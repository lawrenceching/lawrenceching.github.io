<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[IMLC.ME]]></title>
  <link href="http://www.imlc.me/atom.xml" rel="self"/>
  <link href="http://www.imlc.me/"/>
  <updated>2018-05-02T22:32:56+08:00</updated>
  <id>http://www.imlc.me/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.coderforart.com/">CoderForArt</generator>

  
  <entry>
    <title type="html"><![CDATA[Note a debugging of Vue.js v-if]]></title>
    <link href="http://www.imlc.me/note-a-debugging-of-vue-js-v-if.html"/>
    <updated>2018-05-02T20:47:19+08:00</updated>
    <id>http://www.imlc.me/note-a-debugging-of-vue-js-v-if.html</id>
    <content type="html"><![CDATA[
<p>Today my workmate hit an issue that v-if didn&#39;t work for him.<br/>
It turned out that Vue.js can&#39;t watch the property that you do not define at the beginning.</p>

<h2 id="toc_0">Root Cause</h2>

<p>It&#39;s not only relative to v-if. It impact all functions that used two-way data binding.</p>

<p>On below demo, we have two section that both of them hope to change content by button clicking. Section 1 works good but section 2 didn&#39;t.</p>

<p>It&#39;s because section2 object(in js) doesn&#39;t define content property.<br/>
So after Vue runs up, the new property that you add afterward can&#39;t be watched by Vue. And then you will fine your change will not reflect to web page even if you change the value of the property.</p>

<p>In this demo, I tried to change the content of section 2 but it didn&#39;t work. In my workmate&#39;s case, it change the value of a property but v-if was not triggered.</p>

<p>Live Demo: <a href="https://jsfiddle.net/Lawrence/7eq3y5uv/">https://jsfiddle.net/Lawrence/7eq3y5uv/</a><br/>
<iframe src="https://jsfiddle.net/Lawrence/7eq3y5uv/embedded/" width="800px" height="500px"><br/>
</iframe></p>

<h2 id="toc_1">Look Deeper</h2>

<p>When Vue.js starts, it will convert all data into observable. The key is how Vue.js do that here.</p>

<p>Vue.js will bind <code>Watcher</code> on each properties of an object by defining <code>set</code> method using <a href="Object.defineProperty">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty</a>. Therefore Vue.js can get updated if you change the value.</p>

<p>Apparently, if you don&#39;t define an property for an object at the beginning, Vue.js can&#39;t watch it.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Spring Actuator]]></title>
    <link href="http://www.imlc.me/15230283138027.html"/>
    <updated>2018-04-06T23:25:13+08:00</updated>
    <id>http://www.imlc.me/15230283138027.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">Start Up The Service</h2>

<h2 id="toc_1">Customize Health Check</h2>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[来自阿里云云栖社区的 ElasticSearch 原理剖析]]></title>
    <link href="http://www.imlc.me/15228603330284.html"/>
    <updated>2018-04-05T00:45:33+08:00</updated>
    <id>http://www.imlc.me/15228603330284.html</id>
    <content type="html"><![CDATA[
<p>这是一系列来自阿里的 ElasticSearch 的原理剖析文章。文章质量优秀，干货十足。</p>

<p>一是 ES 是非常流行的分布式搜索引擎，不管是日常运维还是生产环境都非常实用。<br/>
二是 ES 也是一个典型的分布式系统。分布式系统避不开的集群、服务发现、Master 选举等话题在此系列文章中都有涉及。如果想了解如何开发一个高可用，可伸缩的分布式系统，ES 也是一个很好的例子。</p>

<p><a href="https://zhuanlan.zhihu.com/p/35291900">Elasticsearch分布式一致性原理剖析(一)-节点篇</a></p>

<p><a href="https://zhuanlan.zhihu.com/p/35294658">Elasticsearch分布式一致性原理剖析(二)-Meta篇</a></p>

<p><a href="https://zhuanlan.zhihu.com/p/35299145">Elasticsearch分布式一致性原理剖析(三)-Data篇</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remote Debugging for Java Application]]></title>
    <link href="http://www.imlc.me/remote-debugging-for-java-application.html"/>
    <updated>2018-03-21T23:24:15+08:00</updated>
    <id>http://www.imlc.me/remote-debugging-for-java-application.html</id>
    <content type="html"><![CDATA[
<p>It&#39;s an important feature that JVM provided and I&#39;m so surprised that I used it at the first time today.</p>

<h2 id="toc_0">How to enable remote debugging</h2>

<p>To enable it, you will just need to add below JVM arguments in command line:</p>

<pre><code>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005
</code></pre>

<p>Then you can use your debugger to attach to remote JVM.</p>

<p><code>suspend</code> is quite useful argument here. If <code>suspend</code> is <code>y</code>, JVM will suspend before main class is loaded until debugger attach to it. <code>n</code> otherwise. </p>

<p>So set <code>suspend</code> to <code>y</code> if you need to debug application initialization phase.</p>

<p><a href="https://docs.oracle.com/javase/7/docs/technotes/guides/jpda/conninv.html">Check Official Document for detailed introduction</a></p>

<h2 id="toc_1">Remote Debugging in IntelliJ IDEA</h2>

<p>I believe all IDEs have that function to debug Java application remotely. I use IntelliJ here for demonstration.</p>

<p><img src="media/15216458555103/Remote%20Debug%20Configuration%20in%20IntelliJ.png" alt="Remote Debug Configuration in IntelliJ"/><br/>
Add a new configuration under Remote category, you will see IntelliJ provides command line arguments for you. That&#39;s exactly what I show in previous section.</p>

<p>Change the host to your server&#39;s url, and launch your application with remote debug arguments, then you can debug as what you did on debugging local application.</p>

<h1 id="toc_2">DO NOT REMOTE DEBUG YOUR PRODUCTION APPLICATION</h1>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is Cherry-Pick]]></title>
    <link href="http://www.imlc.me/what-is-cherry-pick.html"/>
    <updated>2018-02-24T22:28:33+08:00</updated>
    <id>http://www.imlc.me/what-is-cherry-pick.html</id>
    <content type="html"><![CDATA[
<p>I confused for so long that what Cherry-Pick is. And today I got some times to learn it.</p>

<h2 id="toc_0">What Cherry-Pick can do</h2>

<p>Cherry-Pick can pick some commits from other branch, merge into your current working branch.</p>

<h2 id="toc_1">Use Cases</h2>

<ul>
<li><p>If you&#39;re working on a dev branch. You have not yet complete your task but there are change committed. And now you need to merge part of you work into master for some reason but you don&#39;t want to merge the dev branch into master. And now you can cherry pick the commits that just you need, and merge them into master.</p></li>
<li><p>If you merge your commit into wrong branch. And now you need to merge you change into master. You can cherry pick you change and merge into master branch. Then revert your change into that wrong branch.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker is a good way to manage our services]]></title>
    <link href="http://www.imlc.me/15194679139964.html"/>
    <updated>2018-02-24T18:25:13+08:00</updated>
    <id>http://www.imlc.me/15194679139964.html</id>
    <content type="html"><![CDATA[
<p>Many years ago I have heard that docker is an amazing stuff to manage the build, deployment and service life cycle. But at that time, there were also some bad news on security that prevented me from trying it.</p>

<p>And today I finally found a day to play with it. The result is, Docker is a amazing thing to manage my service. It exactly fix my problem that this years I&#39;m trying to improve and contributing to my business.</p>

<h2 id="toc_0">Service Isolation</h2>

<p>Docker will create individual VM to serve each services. Most of OS resource are isolated so that dev doesn&#39;t need to care about the system resource(at least less care about it). Also we can keep clean codebase without system specified logic.</p>

<p>In my company we run services in several hosts shared to different teams. It&#39;s not a frequent case but also annoying that different services will try to use same port, will try to user different JDK version on the path, will need to change same environment variable.</p>

<p>Some service change those share resource dynamically and leads to random failures/issues that hard to locate.</p>

<p>In this scenario, Docker may be one of solutions.</p>

<h2 id="toc_1">Unified Stander to Deploy Services</h2>

<p>DevOps requires less manual work on our build, test, release process. All stuffs should be able to automatically proceed. It absolutely is a good idea. When we serve our system in a large scale and cooperate with so much teams, more manual work we need, much risk we introduce. No one want to stick in fire-fight at mid night. And Docker provide a unified stander to manage service&#39;s resource and environment. That means, we are easily to write automatic process for build, for test and for deployment.</p>

<p>The company I work on has its own solution to manage resource and do things automatically. We have huge set of scripts and softwares to setup dev environment, setup build agents for TeamCity and Jenkins, to deploy application, to verify or monitor the function we provide.<br/>
They are awesome, they have provided huge value to business. But it&#39;s customized. New engineers are hard to understand the ecosystem.</p>

<p>I think Docker is good way to reduce the learning cost because of aligned style to  manage resource </p>

<h2 id="toc_2">Scalability</h2>

<p>It&#39;s the most well-known feature for Docker, no need more words to admire it.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to serve one jersey resource or jetty servlet for different path]]></title>
    <link href="http://www.imlc.me/15063481937597.html"/>
    <updated>2017-09-25T22:03:13+08:00</updated>
    <id>http://www.imlc.me/15063481937597.html</id>
    <content type="html"><![CDATA[
<p>Today I&#39;m trying to make an endpoint accessible in different paths. Such as I can go to <code>http://localhost/</code> and <code>http://localhost/hello</code> for a same hello message. </p>

<p>I do got some solutions.</p>

<p>I&#39;m using Jersey over Jetty. But whether or not  you&#39;re using Jetty servlet or writing Jersey Resource, I think you will get some ideas.</p>

<p>Ps: I copy the code from my GitLab Snippets and will keep it update. So If you find something wrong, pls comment in GitLab</p>

<h3 id="toc_0">Using the regular expression in Jersey Resource</h3>

<p><a href="https://gitlab.com/snippets/1676612">https://gitlab.com/snippets/1676612</a></p>

<pre><code class="language-java">package me.imlc.example.jetty.multiplehandler;

import com.sun.jersey.spi.container.servlet.ServletContainer;
import me.imlc.example.jetty.multplehandler.HelloResource;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.servlet.ServletContextHandler;
import org.eclipse.jetty.servlet.ServletHolder;
import org.glassfish.jersey.server.ResourceConfig;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import java.util.Objects;

import static org.junit.Assert.assertEquals;

public class RegexpResourceTest {

    private static Server server;
    private static CloseableHttpClient client = HttpClients.createDefault();

    @BeforeClass
    public static void beforeAll() throws Exception {
        ResourceConfig rc = new ResourceConfig(RegexpResource.class);

        ServletHolder holder = new ServletHolder(new ServletContainer(rc));

        server = new Server(8080);

        ServletContextHandler contextHandler = new ServletContextHandler(server, &quot;/*&quot;);
        contextHandler.addServlet(holder, &quot;/*&quot;);

        server.start();
    }


    @Test
    public void canAccessByRootPath() throws Exception {
        HttpGet get = new HttpGet(&quot;http://localhost:8080/hello&quot;);
        String content = EntityUtils.toString(client.execute(get).getEntity());
        assertEquals(content, &quot;Hello, Lynn.&quot;);
    }

    @Test
    public void canAccessByServicePath() throws Exception {
        HttpGet get = new HttpGet(&quot;http://localhost:8080/service/hello&quot;);
        String content = EntityUtils.toString(client.execute(get).getEntity());
        assertEquals(content, &quot;Hello, Lynn.&quot;);
    }

    @AfterClass
    public static void afterAll() throws Exception {
        if(Objects.nonNull(server)) server.stop();
        if(Objects.nonNull(client)) client.close();
    }

    @Path(&quot;/{a:(.*)|service}&quot;)
    public static class RegexpResource {
        @GET
        @Produces(MediaType.TEXT_PLAIN)
        public String hello() {
            return &quot;Hello, Lynn.&quot;;
        }
    }
}

</code></pre>

<h3 id="toc_1">Specify multiple paths for one servlet</h3>

<p><a href="https://gitlab.com/snippets/1676613">https://gitlab.com/snippets/1676613</a></p>

<pre><code class="language-java">package me.imlc.example.jetty.multiplehandler;

import com.sun.jersey.spi.container.servlet.ServletContainer;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.servlet.ServletContextHandler;
import org.eclipse.jetty.servlet.ServletHolder;
import org.glassfish.jersey.server.ResourceConfig;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import java.util.Objects;

import static org.junit.Assert.assertEquals;

public class MultipleServletTest {

    private static Server server;
    private static CloseableHttpClient client = HttpClients.createDefault();

    @BeforeClass
    public static void beforeAll() throws Exception {
        ResourceConfig rc = new ResourceConfig(RegexpResourceTest.RegexpResource.class);

        ServletHolder holder = new ServletHolder(new ServletContainer(rc));

        server = new Server(8080);

        ServletContextHandler contextHandler = new ServletContextHandler(server, &quot;/*&quot;);
        contextHandler.addServlet(holder, &quot;/*&quot;);
        contextHandler.addServlet(holder, &quot;/service/*&quot;);

        server.start();
    }

    @Test
    public void canAccessByRootPath() throws Exception {
        HttpGet get = new HttpGet(&quot;http://localhost:8080/hello&quot;);
        String content = EntityUtils.toString(client.execute(get).getEntity());
        assertEquals(content, &quot;Hello, Lynn.&quot;);
    }

    @Test
    public void canAccessByServicePath() throws Exception {
        HttpGet get = new HttpGet(&quot;http://localhost:8080/service/hello&quot;);
        String content = EntityUtils.toString(client.execute(get).getEntity());
        assertEquals(content, &quot;Hello, Lynn.&quot;);
    }

    @AfterClass
    public static void afterAll() throws Exception {
        if(Objects.nonNull(server)) server.stop();
        if(Objects.nonNull(client)) client.close();
    }

    @Path(&quot;/hello&quot;)
    public static class MultipleServletResource {
        @GET
        @Produces(MediaType.TEXT_PLAIN)
        public String hello() {
            return &quot;Hello, Lynn.&quot;;
        }
    }
}

</code></pre>

<h3 id="toc_2">Serve one servlet in different context handler</h3>

<p><a href="https://gitlab.com/snippets/1676615">https://gitlab.com/snippets/1676615</a></p>

<pre><code class="language-java">package me.imlc.example.jetty.multiplehandler;

import com.sun.jersey.spi.container.servlet.ServletContainer;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.eclipse.jetty.server.Handler;
import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.servlet.ServletContextHandler;
import org.eclipse.jetty.servlet.ServletHolder;
import org.glassfish.jersey.server.ResourceConfig;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import java.util.Objects;

import org.eclipse.jetty.server.handler.ContextHandlerCollection;

import static org.junit.Assert.assertEquals;

public class MultipleContextHandlerTest {
    private static Server server;
    private static CloseableHttpClient client = HttpClients.createDefault();

    @BeforeClass
    public static void beforeAll() throws Exception {
        ResourceConfig rc = new ResourceConfig(MultipleContextHandlerResource.class);

        ServletHolder holder = new ServletHolder(new ServletContainer(rc));

        server = new Server(8080);

        ServletContextHandler rootContext = new ServletContextHandler(server, &quot;/*&quot;);
        rootContext.addServlet(holder, &quot;/*&quot;);

        ServletContextHandler serviceContext = new ServletContextHandler(server, &quot;/service/*&quot;);
        serviceContext.addServlet(holder, &quot;/*&quot;);

        ContextHandlerCollection contextHandlerCollection = new ContextHandlerCollection();
        contextHandlerCollection.setHandlers(new Handler[]{
                rootContext, serviceContext
        });

        server.setHandler(contextHandlerCollection);

        server.start();
    }

    @Test
    public void canAccessByRootPath() throws Exception {
        HttpGet get = new HttpGet(&quot;http://localhost:8080/hello&quot;);
        String content = EntityUtils.toString(client.execute(get).getEntity());
        assertEquals(content, &quot;Hello, Lynn.&quot;);
    }

    @Test
    public void canAccessByServicePath() throws Exception {
        HttpGet get = new HttpGet(&quot;http://localhost:8080/service/hello&quot;);
        String content = EntityUtils.toString(client.execute(get).getEntity());
        assertEquals(content, &quot;Hello, Lynn.&quot;);
    }

    @AfterClass
    public static void afterAll() throws Exception {
        if(Objects.nonNull(server)) server.stop();
        if(Objects.nonNull(client)) client.close();
    }

    @Path(&quot;/hello&quot;)
    public static class MultipleContextHandlerResource {
        @GET
        @Produces(MediaType.TEXT_PLAIN)
        public String hello() {
            return &quot;Hello, Lynn.&quot;;
        }
    }
}

</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why we need to disable TRACE method and how to disable TRACE in Embedded Jetty]]></title>
    <link href="http://www.imlc.me/why-we-need-to-disable-trace-method-and-how-to-disable-trace-in-embedded-jetty.html"/>
    <updated>2017-05-06T01:20:05+08:00</updated>
    <id>http://www.imlc.me/why-we-need-to-disable-trace-method-and-how-to-disable-trace-in-embedded-jetty.html</id>
    <content type="html"><![CDATA[
<p>This page show you why we need to disable TRACE HTTP method for security reason.  And provide a sample project to show you how to disable TRACE in embedded Jetty.</p>

<h2 id="toc_0">Why we need to disable TRACE method</h2>

<p>Allowing TRACE method will leads to Cross-Site Tracking (a.k.a XST) problem. XST was found in 2003. It’s a very old topic and I can’t get any new discussion after searched in Google. But it’s good to disable TRACE for our server to avoid any redundant endpoint exposes to the danger world. </p>

<h3 id="toc_1">Avoid XST Attack</h3>

<p>As we all know, server will echo back all information when it receive TRACE request. “All information” means the cookies, the credential data and the server version etc. When user is visiting a malicious website, a hacker can read malicious data by calling a cross-site TRACE request.</p>

<h3 id="toc_2">Limit Information Expose to the World</h3>

<p>In the other case, we run an API server which user will not access by browser directly. It’s good practice to limit the information expose to the external world. Information like version may tell others which issue is ok to use to hack. If we don’t need TRACE (at lease in production environment), so disable it.</p>

<h2 id="toc_3">How to disable TRACE in Embedded Jetty</h2>

<p>By default Jetty enables TRACE  and we need to disable it manually.<br/>
This <a href="https://github.com/lawrenceching/jetty-disable-trace/blob/master/src/main/java/me/imlc/example/jetty_disable_trace/Main.java#L65">GitHub project</a> shows you how to disable TRACE for embedded Jetty.</p>

<pre><code class="language-java">private Handler wrapWithSecurityHandler(Handler h){
        Constraint disableTraceConstraint = new Constraint();
        disableTraceConstraint.setName(&quot;Disable TRACE&quot;);
        disableTraceConstraint.setAuthenticate(true);

        ConstraintMapping mapping = new ConstraintMapping();
        mapping.setConstraint(disableTraceConstraint);
        mapping.setMethod(&quot;TRACE&quot;);
        mapping.setPathSpec(&quot;/&quot;);

        // omissionConstraint is to fix the warning log &quot;&quot;null has uncovered http methods for path: /
        // No impact to disable TRACE if you do not add this constraint
        // But if you&#39;re using the monitoring tool like Geneos, and your component requires keep production monitoring all green,
        // You can try to add this omissionConstraint to fix the warning Jetty prints.
        Constraint omissionConstraint = new Constraint();
        ConstraintMapping omissionMapping = new ConstraintMapping();
        omissionMapping.setConstraint(omissionConstraint);
        omissionMapping.setMethod(&quot;*&quot;);
        omissionMapping.setPathSpec(&quot;/&quot;);


        ConstraintSecurityHandler handler = new ConstraintSecurityHandler();
        handler.addConstraintMapping(mapping);
        handler.addConstraintMapping(omissionMapping);
        handler.setHandler(h);
        return handler;
    }
</code></pre>

<p>Also notice that I wrote omissionConstraint, applied to all method to fix a warning Jetty prints:<br/>
<code>null has uncovered http methods for path: /</code></p>

<p>If you’r not required to keep production monitoring all green, you can delete this redundant constraint and accept this warning. </p>

<h6 id="toc_4">References</h6>

<p>[1] <a href="http://www.cgisecurity.com/whitehat-mirror/WH-WhitePaper_XST_ebook.pdf">CROSS-SITE TRACING (XST) - THE NEW TECHNIQUES AND EMERGING THREATS TO BYPASS CURRENT WEB SECURITY MEASURES USING TRACE AND XSS - Jeremiah Grossman</a><br/>
[2] <a href="https://www.owasp.org/index.php/Cross_Site_Tracing">Cross Site Tracing - OWASP</a><br/>
[3] <a href="http://stackoverflow.com/questions/29348328/java-embedded-jetty-is-accepting-http-trace-method">spring - Java embedded jetty is accepting HTTP TRACE method - Stack Overflow</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 远程登录 Windows 10]]></title>
    <link href="http://www.imlc.me/using-remote-desktop-in-mac-in-china.html"/>
    <updated>2016-11-17T23:08:48+08:00</updated>
    <id>http://www.imlc.me/using-remote-desktop-in-mac-in-china.html</id>
    <content type="html"><![CDATA[
<p>在中国，使用 Windows 的远程桌面服务有两个困难。</p>

<ol>
<li>官方的 Remote Desktop Client on Mac 不在中国销售。</li>
<li>家庭版的 Windows 10 不包含远程桌面服务。</li>
</ol>

<p>解决方法是两个都找第三方解决方案。</p>

<ol>
<li>使用 Parallels Client 代替 Remote Desktop Client on Mac</li>
<li>适用 rdpwrap 提供远程桌面服务</li>
</ol>

<hr/>

<h3 id="toc_0">安装 Parallels Client</h3>

<p>Parallels Client: <a href="https://itunes.apple.com/us/app/parallels-client/id600925318?mt=12">https://itunes.apple.com/us/app/parallels-client/id600925318?mt=12</a></p>

<p>或者需要付费但是一样更好功能更加强大的 Parallels Access:<br/>
<a href="http://www.parallels.com/cn/products/access/">http://www.parallels.com/cn/products/access/</a></p>

<h3 id="toc_1">安装 rdpwrap</h3>

<p>GitHub: <a href="https://github.com/stascorp/rdpwrap">https://github.com/stascorp/rdpwrap</a></p>

<p>rdpwrap 是在家庭版 Windows 上提供远程桌买服务的一个开源项目。支持从 Windows Vista 到 Windows 10 系统。安装和使用说明请到 GitHub 主页查看。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fix angular2 can't route the page after refresh]]></title>
    <link href="http://www.imlc.me/fix-angular2-cannot-route-the-page-after-refresh.html"/>
    <updated>2016-10-03T19:47:21+08:00</updated>
    <id>http://www.imlc.me/fix-angular2-cannot-route-the-page-after-refresh.html</id>
    <content type="html"><![CDATA[
<p>It&#39;s very easy to make a mistake on Angular2 router. After refresh the page, the page to be routed to can not load successfully. Chrome console tell me that browser failed to load css resources as the path of resources is incorrect.</p>

<p>The solution is that put the <code>&lt;base href=&quot;/&quot;/&gt;</code> directly under the title tag. </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[iOS] Header files not found after cocoaPods updated to 1.0]]></title>
    <link href="http://www.imlc.me/header-files-not-found-after-cocoapods-updated-to-1.0.html"/>
    <updated>2016-09-29T21:52:14+08:00</updated>
    <id>http://www.imlc.me/header-files-not-found-after-cocoapods-updated-to-1.0.html</id>
    <content type="html"><![CDATA[
<p>Days ago I update pod to version 1.0. Then found all header not found in my header bridge file. I spent 2 days to locate the reason. That is cocoaPods.<br/>
Thanks to Git, I noticed that Header folder was be deleted after I run <code>pod install</code> which pod 0.x did not do that.<br/>
What pod 1.0 do is that I don’t need import headers explicitly any more. Pod do that.<br/>
So what I need to do is DELETE all import statement which not found. That will fix everything.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Conflict with angular-protractor and jQuery in TypeScript]]></title>
    <link href="http://www.imlc.me/conflict-with-angular-protractor-and-jquery-in-typescript.html"/>
    <updated>2016-09-29T20:57:22+08:00</updated>
    <id>http://www.imlc.me/conflict-with-angular-protractor-and-jquery-in-typescript.html</id>
    <content type="html"><![CDATA[
<p>When I type <code>npm start</code> in my angular2 project, terminal shows:</p>

<p>Subsequent variable declarations must have the same type.  Variable &#39;$&#39; must be of type &#39;JQueryStatic&#39;, but here has type &#39;cssSelectorHelper&#39;<br/>
There is a conflict between angular-protractor and jQuery. One soluction I googled is marked down below:</p>

<p>Modify your jquery.d.ts file<br/>
From:</p>

<pre><code>declare module &quot;jquery&quot; {
    export = $;
}
declare var jQuery: JQueryStatic;
declare var $: JQueryStatic;
</code></pre>

<p>To:</p>

<pre><code>declare module &quot;jquery&quot; {
    export = jQuery;
}
declare var jQuery: JQueryStatic;
</code></pre>

<p>On the contrary, you can change protractor also.<br/>
References:<br/>
[1] <a href="https://codedump.io/share/kQF7Ts1Iu5d/1/how-to-use-jquery-with-angular2">How to use jquery with angular2</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Studio 更新 Android 6.0 之后无法找到 org.apache.http 包的问题]]></title>
    <link href="http://www.imlc.me/android-studio-can-not-find-org-apache-http-package-after-update-to-6.0.html"/>
    <updated>2016-09-27T18:17:56+08:00</updated>
    <id>http://www.imlc.me/android-studio-can-not-find-org-apache-http-package-after-update-to-6.0.html</id>
    <content type="html"><![CDATA[
<p>这么重要的问题竟然没有事先说明，太过分了。<br/>
今天更新了 Android 6.0 的 SDK 后发现项目一片红，吓尿了。<br/>
直接引用把：<a href="http://developer.android.com/about/versions/marshmallow/android-6.0-changes.html#behavior-apache-http-client">http://developer.android.com/about/versions/marshmallow/android-6.0-changes.html#behavior-apache-http-client</a><br/>
Android 6.0 release removes support for the Apache HTTP client. If your app is using this client and targets Android 2.3 (API level 9) or higher, use the <a href="http://developer.android.com/reference/java/net/HttpURLConnection.html">HttpURLConnection</a> class instead. This API is more efficient because it reduces network use through transparent compression and response caching, and minimizes power consumption. To continue using the Apache HTTP APIs, you must first declare the following compile-time dependency in your <strong>build.gradle</strong> file:</p>

<pre><code>android {
    useLibrary &#39;org.apache.http.legacy&#39;
}
</code></pre>

<p>大概意思就是，Android 6.0不再支持 Apache HTTP client。 请使用 <a href="http://developer.android.com/reference/java/net/HttpURLConnection.html">HttpURLConnection</a> 代替。想要继续使用 Apache HTTP client 的，请添加如上代码。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Conversion between Array and JSON string using ObjectMapper]]></title>
    <link href="http://www.imlc.me/conversion-between-array-and-json-string-using-objectmapper.html"/>
    <updated>2016-09-27T18:17:56+08:00</updated>
    <id>http://www.imlc.me/conversion-between-array-and-json-string-using-objectmapper.html</id>
    <content type="html"><![CDATA[
<p>ObjectMapper is a swift library like Gson in Java. Using ObjectMapper, I can easily convert basic classes into JSON format string or convert it inversely. </p>

<p>The code below shows how to convert swift array into JSON and also recover it from JSON.</p>

<pre><code>class Book: Mappable{
    var id:Int?
    var title:String?
    var category:[String]?
    
    init(id:Int, title:String, category:[String]){
        self.id = id
        self.title = title
        self.category = category
    }
    
    required init?(_ map: Map) {
        
    }
    
    func mapping(map: Map) {
        id          &lt;- map[&quot;id&quot;]
        title       &lt;- map[&quot;title&quot;]
        category    &lt;- map[&quot;category&quot;]
    }
}


// Do the conversion
let JSON = &quot;{\&quot;id\&quot;:3, \&quot;title\&quot;:\&quot;The Third Book\&quot;, \&quot;category\&quot;:[\&quot;TOP\&quot;, \&quot;TECH\&quot;]}&quot;

// Convert JSON to class instance
let book3 = Mapper&lt;Book&gt;().map(JSON)!

let book1 = Book(id: 1, title: &quot;The First Book&quot;, category: [&quot;TECH&quot;])
let book2 = Book(id: 2, title: &quot;The Second Book&quot;, category: [&quot;ART&quot;,&quot;MUSIC&quot;])
let books = [book1, book2, book3]
   
// Convert array to JSON array string
let arrayJSON = Mapper().toJSONString(books, prettyPrint: true)

// Convert JSON array back to the array
let bookArray = Mapper&lt;Book&gt;().mapArray(arrayJSON)
</code></pre>

<hr/>

<p>TAG: ObjectMapper, JSON, Swift, Array, Convert, Conversion</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Conversion between String and NSDate]]></title>
    <link href="http://www.imlc.me/conversion-between-string-and-nsdate.html"/>
    <updated>2016-09-27T18:17:56+08:00</updated>
    <id>http://www.imlc.me/conversion-between-string-and-nsdate.html</id>
    <content type="html"><![CDATA[
<p>The class NSDateFormatter is an easy-to-use tool. Just like SimpleDateFormat in Java.</p>

<h4 id="toc_0">Convert String to NSDate</h4>

<pre><code>let str = &quot;2016-06-01T00:00:00Z&quot;
let dateFormatter = NSDateFormatter()
dateFormatter.dateFormat = &quot;yyyy-MM-dd&#39;T&#39;HH:mm:ssZ&quot;
let date = dateFormatter.dateFromString(str)
</code></pre>

<h4 id="toc_1">Convert NSDate to String</h4>

<pre><code>let description = &quot;Time is \(dateFormatter.stringFromDate(date))&quot;
</code></pre>

<p>TAG: Convert, String, NSDate, NSDateFormatter</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java Integer 缓存机制的小坑点]]></title>
    <link href="http://www.imlc.me/java-integer-%E7%BC%93%E5%AD%98-%E6%9C%BA%E5%88%B6-%E5%9D%91%E7%82%B9.html"/>
    <updated>2016-09-27T18:17:56+08:00</updated>
    <id>http://www.imlc.me/java-integer-%E7%BC%93%E5%AD%98-%E6%9C%BA%E5%88%B6-%E5%9D%91%E7%82%B9.html</id>
    <content type="html"><![CDATA[
<p>Integer 是 Java 5 引入的新特性，该特性能节省内存和改善性能。同样被引入缓存机制的还有 Byte，Short，Long，Character，缓存范围都是在 [-128,127] （Character是在[0,127]）之间。</p>

<p>但是有几点需要注意的是：<br/>
1. 对 Integer 对象引入了 IntegerCache 类，其他封装类型也有对应的 XxxCache。<br/>
2. 该缓存特性只有在 autoboxing 过程中使用，换言之，使用 constructor 创建的 Integer 并不能被缓存。<br/>
3. 因为缓存机制的存在，在缓存范围内的对象都来自同一个缓存。带来的副作用是使用“==”地址比较运算符比较两个看似不一样的对象，得到的是 true。网上其他文章的说法是因而可以使用 == 来比较直接比较两个对象的值。但我觉得这样理解容易造成偏差。Java 规范并没有约定 [-128,127] 的范围内 == 用作值比较，这只是一个副作用。<br/>
4. 只有 Integer 对象可以通过指定 JVM 启动参数来修改缓存上限。</p>

<pre><code>-XX:AutoBoxCacheMax=size
</code></pre>

<p>所以说写代码的时候还是不要把==用作值比较。<br/>
 <br/>
老实说这个缓存特性带来的不一致性要是导致了什么BUG实在很难排查。当用了这个特性写了点什么之后，难保后来者不会产生迷惑。所以日常编码中还是尽量避开这个点。<br/>
 <br/>
简单到爆的实验代码：<br/>
简单地验证Java Integer缓存特性</p>

<pre><code>import com.sun.istack.internal.NotNull;
 
/**
 * Created by Lawrence on 15/11/9.
 */
public class Main {
    public static void main(String[] argv){
        Integer int1 = 100;
        Integer int2 = 100;
 
        if(int1==int2){
            print(&quot;int1 is equal to int2&quot;);
        } else {
            print(&quot;int1 is not equal to int2&quot;);
        }
        // prints &quot;int1 is equal to int2&quot;
 
        Integer int3 = 2333;
        Integer int4 = 2333;
 
        if(int3==int4){
            print(&quot;int3 is equal to int4&quot;);
        } else {
            print(&quot;int3 is not equal to int4&quot;);
        }
        // prints &quot;int3 is not equal to int4&quot;
 
        Integer int5 = 100;
        Integer int6 = new Integer(100);
 
        if(int5==int6){
            print(&quot;int5 is equal to int6&quot;);
        } else {
            print(&quot;int5 is not equal to int6&quot;);
        }
        // prints &quot;int5 is not equal to int6&quot;
    }
 
    public static void print(String str){
        System.out.println(str);
    }
 
}
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript 定义 class 的一种解决方案]]></title>
    <link href="http://www.imlc.me/14749714760420.html"/>
    <updated>2016-09-27T18:17:56+08:00</updated>
    <id>http://www.imlc.me/14749714760420.html</id>
    <content type="html"><![CDATA[
<p>这是由荷兰程序员 Gabor de Mooij 提出的一种比较简单的方法。Gabor de Mooij 称之为 minimalist approach。现摘录如下：</p>

<h5 id="toc_0">定义一个 Foo 类</h5>

<pre><code>var Foo = {
    createNew: function(){
        var instance = {};
        instance.description = &quot;A new class instance&quot;;
        instance.bar = function() { console.log(instance.description)};
        return instance;
    }
}
</code></pre>

<h5 id="toc_1">创建一个 Foo 实例</h5>

<pre><code>var foo = Foo.createNew();
foo.bar();
</code></pre>

<h5 id="toc_2">类的继承</h5>

<pre><code>var NewFoo = {
    createNew = function(){
        var instance = Foo.createNew();
        instance.title = &quot;A new title&quot;;
        instance.newBar = function(){
            alert(instance.description);
        };
    }
}
</code></pre>

<h5 id="toc_3">私有方法和属性</h5>

<pre><code>var Foo = {
    createNew: function(){
        var instance = {};
        instance.description = &quot;A new class instance&quot;; //description 是私有的，只有通过 bar() 来访问
        instance.bar = function() { console.log(instance.description)};
        return instance;
    }
}
</code></pre>

<h5 id="toc_4">静态成员变量</h5>

<pre><code>var Foo = {
    id: 101010; // id 在多个实例间共享
    createNew: function(){
        var instance = {};
        instance.description = &quot;A new class instance&quot;; //description 是私有的，只有通过 bar() 来访问
        instance.bar = function() { console.log(instance.description)};
        return instance;
    }
}

var foo1 = Foo.createNew();
var foo2 = Foo.createNew();
foo2.id = 233333;
console.log(&quot;Foo id:&quot;+foo1.id);

</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Parallel Task execution Sample]]></title>
    <link href="http://www.imlc.me/14749714760806.html"/>
    <updated>2016-09-27T18:17:56+08:00</updated>
    <id>http://www.imlc.me/14749714760806.html</id>
    <content type="html"><![CDATA[
<p>A very little snippet of Gradle parallel task execution. Let taskes run concurrently.</p>

<p><strong>ATTENTION:</strong><br/>
<code>gradle -Dorg.gradle.parallel.intra=true hello hello2 --parallel</code> Add argument &#39;-Dorg.gradle.parallel.intra=true&#39; to enforce Gradle run taskes parallelly as for <code>--parallel</code> is an incubating feature,</p>

<pre><code>@ParallelizableTask
class ParallelTask extends DefaultTask {
     String title = &quot;Default Name&quot;
     @TaskAction
     def action1() {
        for (int i=0 ;i &lt; 5; ++i) {
            println &#39;The &#39;+ title + &quot; task is running&quot;
       }
     }
}


task hello(type: ParallelTask)

hello {
    title=&#39;1&#39;
}



task hello2(type: ParallelTask)

hello2 {
    title=&#39;2&#39;
}

</code></pre>

<h4 id="toc_0">References</h4>

<p>[1] <a href="https://discuss.gradle.org/t/using-parallelizabletask/14634">Using ParallelizableTask</a><br/>
[2] <a href="https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/ParallelizableTask.html">Annotation Type ParallelizableTask</a><br/>
[3] <a href="https://github.com/gradle/gradle/blob/master/design-docs/parallel-task-execution.md">parallel-task-execution.md</a><br/>
[4] <a href="https://docs.gradle.org/current/userguide/multi_project_builds.html#sec:parallel_execution">Chapter 24. Multi-project Builds</a></p>

<hr/>

<p>TAG: Gradle, Parallel Execution, Task, Simultaneously, Concurrently, Synchronously</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Save and load object in localStorage]]></title>
    <link href="http://www.imlc.me/14749714760916.html"/>
    <updated>2016-09-27T18:17:56+08:00</updated>
    <id>http://www.imlc.me/14749714760916.html</id>
    <content type="html"><![CDATA[
<p>As for the reason only string can be stored in localStorage, an object need to be converted to string format (JSON text).</p>

<h3 id="toc_0">Save object</h3>

<pre><code>var books = [{id:3, name:&quot;From Zero To One&quot;}, {id:4, name:&quot;Head First Java&quot;}];
localStorage.setItem(&quot;books&quot;, JSON.stringify(books));
</code></pre>

<h3 id="toc_1">Load object</h3>

<pre><code>var booksJSON = localStorage.getItem(&quot;books&quot;);
if( booksJSON == null ){
    // No data stored in the localStorage
    return;
}
var books = JSON.parse(booksJSON);
for(var i=0; i &lt; books.length; ++i) {
    var book = books[i];
    var id = book.id;
    var name = book.name;
}

</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UILabel 图标保持比例缩放]]></title>
    <link href="http://www.imlc.me/14749714760995.html"/>
    <updated>2016-09-27T18:17:56+08:00</updated>
    <id>http://www.imlc.me/14749714760995.html</id>
    <content type="html"><![CDATA[
<p>Just set that:</p>

<pre><code>button.imageView?.contentMode = .ScaleAspectFit
</code></pre>

<hr/>

<p>TAG: iOS, Xcode, UILabel, UIButton, image, icon, ScaleAspectFit, Adjust</p>

]]></content>
  </entry>
  
</feed>
